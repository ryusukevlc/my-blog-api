<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="info.ryusukeblog.myblogapi.article.ArticleMapper">

    <resultMap id="ArticleResultMap" type="info.ryusukeblog.myblogapi.article.Article" autoMapping="true">
        <result property="id" column="id"></result>
        <result property="title" column="title"></result>
        <result property="content" column="content"></result>
        <result property="createdAt" column="created_at" javaType="java.time.LocalDateTime"></result>
        <result property="updatedAt" column="updated_at" javaType="java.time.LocalDateTime"></result>
        <result property="partOfContent" column="part_of_content"></result>
        <collection property="tagList" select="findTags" column="id">
        </collection>
    </resultMap>

    <resultMap id="TagResultMap" type="info.ryusukeblog.myblogapi.tag.Tag" autoMapping="true">
        <result property="id" column="id"></result>
        <result property="name" column="name"></result>
        <result property="createdAt" column="created_at" javaType="java.time.LocalDateTime"></result>
        <result property="updatedAt" column="updated_at" javaType="java.time.LocalDateTime"></result>
    </resultMap>

    <select id="findById" parameterType="int" resultMap="ArticleResultMap">
        select *
        from articles
        where id = #{id};
    </select>
    <select id="findAll" resultMap="ArticleResultMap">
        select *
        from articles;
    </select>
    <select id="findWithPagination" resultMap="ArticleResultMap">
        select
        <if test="fieldMap.id">id,</if>
        <if test="fieldMap.title">title,</if>
        <if test="fieldMap.content">content,</if>
        <if test="fieldMap.isWriting">is_writing,</if>
        <if test="fieldMap.createdAt">created_at,</if>
        <if test="fieldMap.updatedAt">updated_at,</if>
        <if test="fieldMap.partOfContent">part_of_content,</if>
        1 as dammy
        from articles
        order by created_at desc limit #{limit}
        offset #{offset};
    </select>
    <select id="count" resultType="int">
        select count(*)
        from articles;
    </select>
    <insert id="save" parameterType="info.ryusukeblog.myblogapi.article.Article">
        insert into articles (title,
                              content,
                              is_writing,
                              part_of_content,
                              created_at,
                              updated_at)
        values (#{title},
                #{content},
                #{isWriting},
                #{partOfContent},
                #{createdAt},
                #{updatedAt});
    </insert>
    <update id="update" parameterType="info.ryusukeblog.myblogapi.article.Article">
        update articles
        set id              = #{id},
            title           = #{title},
            content         = #{content},
            is_writing      = #{isWriting},
            part_of_content = #{partOfContent},
            updated_at= #{updatedAt}
        where id = #{id}
    </update>
    <delete id="delete">
        delete
        from articles
        where id = #{id};
    </delete>

    <select id="findTags" parameterType="int" resultMap="TagResultMap">
        select tags.id,
               tags.name,
               tags.created_at,
               tags.updated_at
        from articles_tags
                 left join
             tags
             on
                 articles_tags.tag_id = tags.id
        where articles_tags.article_id = #{id};
    </select>

    <insert id="saveArticleTagRelation" parameterType="info.ryusukeblog.myblogapi.article.Article">
        insert into articles_tags (
        article_id,
        tag_id,
        created_at,
        updated_at
        ) values
        <foreach collection="tagList" item="tag" separator=",">
            (
            #{id},
            #{tag.id},
            #{createdAt},
            #{updatedAt}
            )
        </foreach>
    </insert>
    <select id="getLastInsertId">
        select last_insert_id();
    </select>
    <delete id="deleteArticleTagRelationByArticleId" parameterType="int">
        delete
        from articles_tags
        where article_id = #{id}
    </delete>

</mapper>